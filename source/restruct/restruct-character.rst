.. _restruct-character:

****************************************************************************************************
文字の表現
****************************************************************************************************
Sphinx で使用できる文字の表現のサンプルです。「説明　→　コードのサンプル　→　コードの実行結果」の順に説明します。

| **【トピックス】**
| ・ :ref:`restruct-character-italic`
| ・ :ref:`restruct-character-bold`
| ・ :ref:`restruct-code-sample`
| ・ :ref:`restruct-field-list`
| ・ :ref:`restruct-backslush`
| ・ :ref:`restruct-lineblock`
| ・ :ref:`restruct-list`
| ・ :ref:`restruct-literal-blocks`

----

.. _restruct-character-italic:

強調（イタリック）
====================================================================================================
- 文字列を "*" ではさむと強調（イタリック）表示になります。
- Mozilla Firefox は強調表示になりますが、 Google Chrome や Microsoft Edge は通常表示と変わらない表示です。

.. code-block:: none

   このように *強調したい文字列* を "*" ではさみます。

このように *強調したい文字列* を "*" ではさみます。

----

.. _restruct-character-bold:

強い強調（太字）
====================================================================================================
- 文字列を "**" ではさむと強い強調（太字）表示になります。

.. code-block:: none

   このように **強く強調したい文字列** を "**" ではさみます。

このように **強く強調したい文字列** を "**" ではさみます。

----

.. _restruct-code-sample:

コードサンプル
====================================================================================================
- 文字列を "``" ではさむとコードサンプル表示になります。

.. code-block:: none

   ``コードサンプル表示したい文字列`` を "``"ではさみます。

``コードサンプル表示したい文字列`` を "``"ではさみます。

----

.. _restruct-field-list:

フィールドリスト
====================================================================================================
- 文字列を ":" ではさむとフィールドリストになります。

.. code-block:: none

   :1 つめのフィールドリスト: 説明文　その1
   :2 つめのフィールドリスト: 説明文　その2
   :3 つめのフィールドリスト: 説明文　その3

:1 つめのフィールドリスト: 説明文　その1
:2 つめのフィールドリスト: 説明文　その2
:3 つめのフィールドリスト: 説明文　その3

- フィールドリスト表示をしたい行の次の行にインデントを付けると同様の効果が得られます。

.. code-block:: none

   1 つめのフィールドリスト
      説明文　その1
   2 つめのフィールドリスト
      説明文　その2
   3 つめのフィールドリスト
      説明文　その3

1 つめのフィールドリスト
   説明文　その1
2 つめのフィールドリスト
   説明文　その2
3 つめのフィールドリスト
   説明文　その3

----

.. _restruct-backslush:

"\\" の表記
====================================================================================================
- "\\" を書くときは "\\\\" と書きます。

.. code-block:: none

    "c:\\windows" ディレクトリーです。

"c:\\windows" ディレクトリーです。

----

.. _restruct-lineblock:

ラインブロック
====================================================================================================
- 行の先頭に "|" を書くと、その行はラインブロックになります。
- ラインブロックはソースコードの改行がそのまま反映されます。

.. code-block:: none

   | このように先頭に "|" を書くと
   | 書いたとおりに
   | 改行します。

| このように先頭に "|" を書くと
| 書いたとおりに
| 改行します。

.. code-block:: none

   ラインブロックの指定をしないときは
   改行位置は Sphinx まかせに
   なります。

ラインブロックの指定をしないときは
改行位置は Sphinx まかせに
なります。

----

.. _restruct-list:

リスト（箇条書き）
====================================================================================================

.. _restruct-list-normal:

一般的な箇条書き
----------------------------------------------------------------------------------------------------
- 行の先頭に "-" を書くと、その行は箇条書きになります。

.. code-block:: none

   - 箇条書きの 1 つ目です。
   - 箇条書きは先頭に "・" がつきます。
   - 箇条書きでも
     改行は Sphinx 任せです。

- 箇条書きの 1 つ目です。
- 箇条書きは先頭に "・" がつきます。
- 箇条書きでも
  改行は Sphinx 任せです。

.. _restruct-list-numbered:

番号付きの箇条書き
----------------------------------------------------------------------------------------------------
- 行の先頭に "#." を書くと、その行は番号付きの箇条書きになります。

.. code-block:: none

   #. 箇条書きの 1 つ目です。
   #. 箇条書きは先頭に開始値が 1 の番号が付きます。
   #. 番号付き箇条書きでも、やっぱり
      改行は Sphinx 任せです。

#. 箇条書きの 1 つ目です。
#. 箇条書きは先頭に開始値が 1 の番号が付きます。
#. 番号付き箇条書きでも、やっぱり
   改行は Sphinx 任せです。

.. _restruct-list-numbered-init:

初期値あり番号付きの箇条書き
----------------------------------------------------------------------------------------------------
- 番号付きの箇条書きは初期値を指定できます。

.. code-block:: none

   8. 箇条書きの 1 つ目です。
   #. 箇条書きは先頭に開始値が 1 の番号が付きます。
   #. 初期値ありの番号付き箇条書きでも、やっぱり
      改行は Sphinx 任せです。

8. 箇条書きの 1 つ目です。
#. 箇条書きは先頭に開始値が 1 の番号が付きます。
#. 初期値ありの番号付き箇条書きでも、やっぱり
   改行は Sphinx 任せです。

.. _restruct-list-nested:

リストのネスト
----------------------------------------------------------------------------------------------------
- リストはネストできます。
- 親リストと子リストの間に 1 行の空行が必要です。

.. code-block:: none

   - 親リストの 1 つめ
   
      - 子リストの 1 つめ
      - 子リストの 2 つめ
      - 子リストの 3 つめ
   
   - 親リストの 2 つめ
   
   #. 番号付き親リストの 1 つめ
   
      #. 番号付き子リストの 1 つめ
      #. 番号付き子リストの 2 つめ
      #. 番号付き子リストの 3 つめ
   
   #. 番号付き親リストの 2 つめ

- 親リストの 1 つめ

   - 子リストの 1 つめ
   - 子リストの 2 つめ
   - 子リストの 3 つめ

- 親リストの 2 つめ

#. 番号付き親リストの 1 つめ

   #. 番号付き子リストの 1 つめ
   #. 番号付き子リストの 2 つめ
   #. 番号付き子リストの 3 つめ

#. 番号付き親リストの 2 つめ

.. _restruct-list-etc-numbered:

その他の箇条書き
----------------------------------------------------------------------------------------------------
.. code-block:: none

   a. 番号の代わりに英小文字を使用した箇条書きの 1 つ目です。
   #. 箇条書きは番号は a. b. c. ・・・ になります。
   #. 改行は
      やっぱり Sphinx 任せです。

   A. 番号の代わりに英大文字を使用した箇条書きの 1 つ目です。
   #. 箇条書きは番号は A. B. C. ・・・ になります。
   #. 改行は
      やっぱり Sphinx 任せです。

a. 番号の代わりに英小文字を使用した箇条書きの 1 つ目です。
#. 箇条書きは番号は a. b. c. ・・・ になります。
#. 改行は
   やっぱり Sphinx 任せです。

A. 番号の代わりに英大文字を使用した箇条書きの 1 つ目です。
#. 箇条書きは番号は A. B. C. ・・・ になります。
#. 改行は
   やっぱり Sphinx 任せです。

----

.. _restruct-literal-blocks:

リテラルコードブロック
====================================================================================================
- 行の最後に " ::"  = 半角空白 1 桁 + "::" を付けると、次の行からはリテラルコードブロックと解釈されます。
- リテラルコードブロック部分の前後に 1 行の空行が必要です。
- リテラルコードブロック部分はインデントして記入します。
- リテラルコードブロック部分に記述した内容は、そのまま表示されます。

.. code-block:: none

   ここは通常の文章です。次の行はリテラルコードブロックです。 ::
   
      ここからリテラルコードブロックです。
      リテラルコードブロック部分の改行は、
      ソースコードの内容がそのまま反映されます。
      入力した文字はそのまま表示されます。箇条書きをしようとしても
   
      - あああ
      - いいい
   
      のようにそのまま表示されます。  
      ここでリテラルコードブロックは終了です。
   
   ここから通常の文章です。

ここは通常の文章です。次の行はリテラルコードブロックです。 ::

   ここからリテラルコードブロックです。
   リテラルコードブロック部分の改行は、
   ソースコードの内容がそのまま反映されます。
   入力した文字はそのまま表示されます。箇条書きをしようとしても

   - あああ
   - いいい

   のようにそのまま表示されます。  
   ここでリテラルコードブロックは終了です。

ここから通常の文章です。
